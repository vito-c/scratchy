if exists('g:loaded_scratch')
  finish
endif
let g:loaded_scratch = 1

function! s:Requirescratchy(host) abort
  return jobstart(['/Users/vito.cutten/code/personal/scratchy/bin/scratchy'], {'rpc': v:true})
endfunction

call remote#host#Register('scratchy', 'x', function('s:Requirescratchy'))
call remote#host#RegisterPlugin('scratchy', '0', [
\ {'type': 'function', 'name': 'ScratchyRun', 'sync': 1, 'opts': {}},
\ {'type': 'function', 'name': 'ScratchySetup', 'sync': 1, 'opts': {}},
\ ])




if exists('g:loaded_hello')
  finish
endif
let g:loaded_hello = 1

function! s:Requirehello(host) abort
  " 'hello' is the binary created by compiling the program above.
  return jobstart(['/Users/vito.cutten/code/personal/scratchy/bin/hello'], {'rpc': v:true})
endfunction

call remote#host#Register('hello', 'x', function('s:Requirehello'))
" The following lines are generated by running the program
" command line flag --manifest hello
call remote#host#RegisterPlugin('hello', '0', [
    \ {'type': 'function', 'name': 'Hello', 'sync': 1, 'opts': {}},
    \ ])

" call remote#host#RegisterPlugin('test', '0', [
" \ {'type': 'function', 'name': 'MyTest', 'sync': 1, 'opts': {}},
" \ {'type': 'function', 'name': 'ScratchyRun', 'sync': 1, 'opts': {}},
" \ ])

" call remote#host#Register('hello', 'x', function('s:Requirehello'))
" " The following lines are generated by running the program
" " command line flag --manifest hello
" call remote#host#RegisterPlugin('hello', '0', [
"     \ {'type': 'function', 'name': 'Hello', 'sync': 1, 'opts': {}},
"     \ ])
"
" " vim:ts=4:sw=4:et
